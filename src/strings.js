'use strict'
{
  console.clear();
  const testStr = 'MyTestingString';
  console.log(testStr.slice(2, 8) + ' ' + testStr.substr(2, 8) + ' ' + testStr.substring(2, 8));//Testin TestingS Testin
  console.log(testStr.substr(-6, 3)); // Str
  console.log(testStr.substr(2));     // TestingString
  console.log(testStr.substring(2));  // TestingString
  console.log(testStr.slice(-6, -3)); // Str
  console.log(testStr.slice(9, -3));  // Str
  /*
    !     –º–µ—Ç–æ–¥            |         –≤—ã–±–∏—Ä–∞–µ—Ç‚Ä¶                       |            –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    slice(start, end)      |  –æ—Ç  start  –¥–æ  end(–Ω–µ –≤–∫–ª—é—á–∞—è  end)    |    –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è   // ! –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏ 2 –º–µ—Å—Ç–æ
    substring(start, end)  |  –º–µ–∂–¥—É  start  –∏  end                   |    –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ä–∞–≤–Ω–æ–∑–Ω–∞—á–Ω—ã  0     // ! –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏ 3 –º–µ—Å—Ç–æ
    substr(start, length)  |  length  —Å–∏–º–≤–æ–ª–æ–≤, –Ω–∞—á–∏–Ω–∞—è –æ—Ç  start    |    –∑–Ω–∞—á–µ–Ω–∏–µ  start  –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º // ! –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏ 1 –º–µ—Å—Ç–æ
  */
  console.group("********** —Ä–∞–±–æ—Ç–∞ —Å–æ —Å—Ç—Ä–æ–∫–æ–π");
  const aa = 'AAA';
  console.log(`–≠—Ç–æ –¥–ª–∏–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å //\\\$ - –≤—ã–≤–æ–¥ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–∞
  ""  ' —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏!@ ‚Äî ≈§≈ΩƒÜ –∏ –ø–µ—Ä–µ–≤–æ–¥–æ–º —Å—Ç—Ä–æ–∫–∏. \${dffd}`);
  console.log(`\t\tdfsdkfsfl fjsdlfsl ${aa} sdf`);
  let className = 0.1 + 0.2;  // 0.30000000000000004
  var num = 8;
  var num = 10;
  console.log(`box ${className.toFixed(1)}
  dddd ${num}`);// box 0.3
  //   dddd 10
  const str = 'Hello world, welcome to the javascript.';
  console.log(str.startsWith('Hello')); // true
  console.log(str.startsWith('Help'));  // false
  console.log(str.endsWith('javascript.')); // true
  console.log(str.endsWith('hello'));       // false
  console.log(str.includes("world")); // true
  console.log(str.includes("test"));  // false
  console.log('myteststring'.split('', 6));  //[ 'm', 'y', 't', 'e', 's', 't' ]
  console.log('myteststring'.split(',', 6)); //[ 'myteststring' ]


  console.group("------ str.localeCompare(compareString[, locales[, options]])")
  console.log('√ñsterreich' > 'Zealand'); // true
  console.log('√ñsterreich'.localeCompare('Zealand')); // -1 (false)
  console.log('≈ô > r - ', '≈ô'.localeCompare('r', 'en', { sensitivity: 'base' })); //0
  console.log('≈ô > r - ', '≈ô'.localeCompare('r', 'cs', { sensitivity: 'base' })); //1
  console.log('√§ > z - ', '√§'.localeCompare('z', 'de')); // –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: –≤ –Ω–µ–º–µ—Ü–∫–æ–º –±—É–∫–≤–∞ √§ –∏–¥—ë—Ç —Ä—è–¥–æ–º —Å –±—É–∫–≤–æ–π a
  console.log('√§ > z - ', '√§'.localeCompare('z', 'sv')); // –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: –≤ —à–≤–µ–¥—Å–∫–æ–º –±—É–∫–≤–∞ √§ —Å–ª–µ–¥—É–µ—Ç –ø–æ—Å–ª–µ –±—É–∫–≤—ã z
  // –í –Ω–µ–º–µ—Ü–∫–æ–º –±—É–∫–≤–∞ a —è–≤–ª—è–µ—Ç—Å—è –±–∞–∑–æ–≤–æ–π –¥–ª—è –±—É–∫–≤—ã √§
  console.log('√§ > a - ', '√§'.localeCompare('a', 'de', { sensitivity: 'base' })); // 0
  // –í —à–≤–µ–¥—Å–∫–æ–º –±—É–∫–≤—ã √§ –∏ a —è–≤–ª—è—é—Ç—Å—è –¥–≤—É–º—è —Ä–∞–∑–Ω—ã–º–∏ –±–∞–∑–æ–≤—ã–º–∏ –±—É–∫–≤–∞–º–∏
  console.log('√§ > a - ', '√§'.localeCompare('a', 'sv', { sensitivity: 'base' })); // –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  console.groupEnd();

  let strCodes = '';
  for (let i = 65; i <= 220; i++) {
    strCodes += String.fromCodePoint(i);  // —Å–∏–º–≤–æ–ª –∏–∑ –∫–æ–¥–∞
  }
  console.log(strCodes);
  console.log('‚Ä¶'.codePointAt(0).toString(16)); // \x2026 (8230)
  console.log('S\u0307\u0323'); // ·π®
  console.log('S\u0307\u0323'.length); //3
  console.log("S\u0307\u0323".normalize().length); //1
  console.log("S\u0307\u0323".normalize() == "S\u0323\u0307".normalize())//true

  console.log('‚ã® [0] - ', '‚ã®'.charCodeAt(0).toString(16)); // d835, –º–µ–∂–¥—É 0xd800 –∏ 0xdbff // ! ???
  console.log('‚ã® [1] - ', '‚ã®'.charCodeAt(1).toString(16)); // dcb3, –º–µ–∂–¥—É 0xdc00 –∏ 0xdfff // ! ???

  function truncate(str, maxlength) {
    return (str.length > maxlength) ?
      str.slice(0, maxlength - 1) + '‚Ä¶' : str; // '‚Ä¶' –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª
  }
  console.log(truncate("–í–æ—Ç, —á—Ç–æ –º–Ω–µ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã —Å–∫–∞–∑–∞—Ç—å –Ω–∞ —ç—Ç—É —Ç–µ–º—É:", 30));
  let n = 6;
  for (let i = 1; i <= n; i++) {
    console.log('–≤—ã–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏ - ', ' '.repeat(n - i) + '#'.repeat(i));
  }
  console.groupEnd();
  //---- –ø–æ–¥—Å—Ç—Ä–æ–∫–∞
  console.group("********** –ø–æ–¥—Å—Ç—Ä–æ–∫–∞");
  const str1 = '012345678901234567890abc';
  console.log(str1.substr(1, 3));    //123
  console.log(str1.substring(1, 3)); //12
  console.log(str1.slice(1, 3));     //12
  console.log(str1.slice(-3, -1));   //ab
  console.groupEnd();
  // ! ************ –í—ã–≤–æ–¥ –Æ–Ω–∏–∫–æ–¥, hex —Å–∏–º–≤–æ–ª–∞
  console.group('************ –í—ã–≤–æ–¥ –Æ–Ω–∏–∫–æ–¥, hex —Å–∏–º–≤–æ–ª–∞');
  console.log("\u2764\uFE0F");
  console.log("\xAE");
  console.log('\u{1D306}'); //ECMAScript 6: Unicode code point escapes
  console.log("Ich \u2665 B\xFCcher");
  console.log('\u{1F334}') //üå¥
  console.log('\u{1F1E8}\u{1F1FF}'); //üá®üáø
  console.log('\u{1F1FA}\u{1F1E6}'); //üá∫üá¶
  var country_emoji_ranges = ['\\u{1F1E6}[\\u{1F1E9}-\\u{1F1EC}\\u{1F1EE}\\u{1F1F1}\\u{1F1F2}\\u{1F1F4}\\u{1F1F6}-\\u{1F1FA}\\u{1F1FC}\\u{1F1FD}\\u{1F1FF}]',
    '\\u{1F1E7}[\\u{1F1E6}\\u{1F1E7}\\u{1F1E9}-\\u{1F1EF}\\u{1F1F1}-\\u{1F1F4}\\u{1F1F6}-\\u{1F1F9}\\u{1F1FB}\\u{1F1FC}\\u{1F1FE}\\u{1F1FF}]',
    '\\u{1F1E8}[\\u{1F1E6}\\u{1F1E8}\\u{1F1E9}\\u{1F1EB}-\\u{1F1EE}\\u{1F1F0}-\\u{1F1F4}\\u{1F1F7}\\u{1F1FA}-\\u{1F1FF}]',
    '\\u{1F1E9}[\\u{1F1EA}\\u{1F1EF}\\u{1F1F0}\\u{1F1F2}\\u{1F1F4}\\u{1F1FF}]',
    '\\u{1F1EA}[\\u{1F1E8}\\u{1F1EA}\\u{1F1EC}\\u{1F1ED}\\u{1F1F7}-\\u{1F1F9}]',
    '\\u{1F1EB}[\\u{1F1EE}\\u{1F1EF}\\u{1F1F0}\\u{1F1F2}\\u{1F1F4}\\u{1F1F7}]',
    '\\u{1F1EC}[\\u{1F1E6}\\u{1F1E7}\\u{1F1E9}-\\u{1F1EE}\\u{1F1F1}-\\u{1F1F3}\\u{1F1F5}-\\u{1F1FA}\\u{1F1FC}\\u{1F1FE}]',
    '\\u{1F1ED}[\\u{1F1F0}\\u{1F1F2}\\u{1F1F3}\\u{1F1F7}\\u{1F1F9}\\u{1F1FA}]',
    '\\u{1F1EE}[\\u{1F1E9}-\\u{1F1F4}\\u{1F1F6}-\\u{1F1F9}]',
    '\\u{1F1EF}[\\u{1F1EA}\\u{1F1F2}\\u{1F1F4}\\u{1F1F5}]',
    '\\u{1F1F0}[\\u{1F1EA}\\u{1F1EC}-\\u{1F1EE}\\u{1F1F2}\\u{1F1F3}\\u{1F1F5}\\u{1F1F7}\\u{1F1FC}\\u{1F1FE}\\u{1F1FF}]',
    '\\u{1F1F1}[\\u{1F1E6}-\\u{1F1E8}\\u{1F1EE}\\u{1F1F0}\\u{1F1F8}-\\u{1F1FB}\\u{1F1FE}]',
    '\\u{1F1F2}[\\u{1F1E6}\\u{1F1E8}-\\u{1F1ED}\\u{1F1F0}-\\u{1F1FF}]',
    '\\u{1F1F3}[\\u{1F1E6}\\u{1F1E8}\\u{1F1EA}-\\u{1F1EC}\\u{1F1EE}\\u{1F1F1}\\u{1F1F4}\\u{1F1F5}\\u{1F1F7}\\u{1F1FA}\\u{1F1FF}]',
    '\\u{1F1F4}\\u{1F1F2}',
    '\\u{1F1F5}[\\u{1F1E6}\\u{1F1EA}-\\u{1F1ED}\\u{1F1F0}-\\u{1F1F3}\\u{1F1F7}-\\u{1F1F9}\\u{1F1FC}\\u{1F1FE}]',
    '\\u{1F1F6}\\u{1F1E6}',
    '\\u{1F1F7}[\\u{1F1EA}\\u{1F1F4}\\u{1F1F8}\\u{1F1FA}\\u{1F1FC}]',
    '\\u{1F1F8}[\\u{1F1E6}-\\u{1F1EA}\\u{1F1EC}-\\u{1F1F4}\\u{1F1F7}-\\u{1F1F9}\\u{1F1FB}\\u{1F1FD}-\\u{1F1FF}]',
    '\\u{1F1F9}[\\u{1F1E8}\\u{1F1E9}\\u{1F1EB}-\\u{1F1ED}\\u{1F1EF}-\\u{1F1F4}\\u{1F1F7}\\u{1F1F9}\\u{1F1FB}\\u{1F1FC}\\u{1F1FF}]',
    '\\u{1F1FA}[\\u{1F1E6}\\u{1F1EC}\\u{1F1F2}\\u{1F1F8}\\u{1F1FE}\\u{1F1FF}]',
    '\\u{1F1FB}[\\u{1F1E6}\\u{1F1E8}\\u{1F1EA}\\u{1F1EC}\\u{1F1EE}\\u{1F1F3}\\u{1F1FA}]',
    '\\u{1F1FC}[\\u{1F1EB}\\u{1F1F8}]',
    '\\u{1F1FE}[\\u{1F1EA}\\u{1F1F9}]',
    '\\u{1F1FF}[\\u{1F1E6}\\u{1F1F2}\\u{1F1FC}]'
  ];
  var country_emoji_rx = new RegExp(country_emoji_ranges.join('|'), 'ug');
  var text = "\u{1F1E6}\u{1F1E9}, \u{1F1E6}\u{1F1EA}, \u{1F1E6}\u{1F1EB}, \u{1F1E6}\u{1F1EC}, \u{1F1E6}\u{1F1EE}, \u{1F1E6}\u{1F1F1}, \u{1F1E6}\u{1F1F2}, \u{1F1E6}\u{1F1F4}, \u{1F1E6}\u{1F1F6}, \u{1F1E6}\u{1F1F7}, \u{1F1E6}\u{1F1F8}, \u{1F1E6}\u{1F1F9}, \u{1F1E6}\u{1F1FA}, \u{1F1E6}\u{1F1FC}, \u{1F1E6}\u{1F1FD}, \u{1F1E6}\u{1F1FF}, \u{1F1E7}\u{1F1E6}, \u{1F1E7}\u{1F1E7}, \u{1F1E7}\u{1F1E9}, \u{1F1E7}\u{1F1EA}, \u{1F1E7}\u{1F1EB}, \u{1F1E7}\u{1F1EC}, \u{1F1E7}\u{1F1ED}, \u{1F1E7}\u{1F1EE}, \u{1F1E7}\u{1F1EF}, \u{1F1E7}\u{1F1F1}, \u{1F1E7}\u{1F1F2}, \u{1F1E7}\u{1F1F3}, \u{1F1E7}\u{1F1F4}, \u{1F1E7}\u{1F1F6}, \u{1F1E7}\u{1F1F7}, \u{1F1E7}\u{1F1F8}, \u{1F1E7}\u{1F1F9}, \u{1F1E7}\u{1F1FB}, \u{1F1E7}\u{1F1FC}, \u{1F1E7}\u{1F1FE}, \u{1F1E7}\u{1F1FF}, \u{1F1E8}\u{1F1E6}, \u{1F1E8}\u{1F1E8}, \u{1F1E8}\u{1F1E9}, \u{1F1E8}\u{1F1EB}, \u{1F1E8}\u{1F1EC}, \u{1F1E8}\u{1F1ED}, \u{1F1E8}\u{1F1EE}, \u{1F1E8}\u{1F1F0}, \u{1F1E8}\u{1F1F1}, \u{1F1E8}\u{1F1F2}, \u{1F1E8}\u{1F1F3}, \u{1F1E8}\u{1F1F4}, \u{1F1E8}\u{1F1F7}, \u{1F1E8}\u{1F1FA}, \u{1F1E8}\u{1F1FB}, \u{1F1E8}\u{1F1FC}, \u{1F1E8}\u{1F1FD}, \u{1F1E8}\u{1F1FE}, \u{1F1E8}\u{1F1FF}, \u{1F1E9}\u{1F1EA}, \u{1F1E9}\u{1F1EF}, \u{1F1E9}\u{1F1F0}, \u{1F1E9}\u{1F1F2}, \u{1F1E9}\u{1F1F4}, \u{1F1E9}\u{1F1FF}, \u{1F1EA}\u{1F1E8}, \u{1F1EA}\u{1F1EA}, \u{1F1EA}\u{1F1EC}, \u{1F1EA}\u{1F1ED}, \u{1F1EA}\u{1F1F7}, \u{1F1EA}\u{1F1F8}, \u{1F1EA}\u{1F1F9}, \u{1F1EB}\u{1F1EE}, \u{1F1EB}\u{1F1EF}, \u{1F1EB}\u{1F1F0}, \u{1F1EB}\u{1F1F2}, \u{1F1EB}\u{1F1F4}, \u{1F1EB}\u{1F1F7}, \u{1F1EC}\u{1F1E6}, \u{1F1EC}\u{1F1E7}, \u{1F1EC}\u{1F1E9}, \u{1F1EC}\u{1F1EA}, \u{1F1EC}\u{1F1EB}, \u{1F1EC}\u{1F1EC}, \u{1F1EC}\u{1F1ED}, \u{1F1EC}\u{1F1EE}, \u{1F1EC}\u{1F1F1}, \u{1F1EC}\u{1F1F2}, \u{1F1EC}\u{1F1F3}, \u{1F1EC}\u{1F1F5}, \u{1F1EC}\u{1F1F6}, \u{1F1EC}\u{1F1F7}, \u{1F1EC}\u{1F1F8}, \u{1F1EC}\u{1F1F9}, \u{1F1EC}\u{1F1FA}, \u{1F1EC}\u{1F1FC}, \u{1F1EC}\u{1F1FE}, \u{1F1ED}\u{1F1F0}, \u{1F1ED}\u{1F1F2}, \u{1F1ED}\u{1F1F3}, \u{1F1ED}\u{1F1F7}, \u{1F1ED}\u{1F1F9}, \u{1F1ED}\u{1F1FA}, \u{1F1EE}\u{1F1E9}, \u{1F1EE}\u{1F1EA}, \u{1F1EE}\u{1F1F1}, \u{1F1EE}\u{1F1F2}, \u{1F1EE}\u{1F1F3}, \u{1F1EE}\u{1F1F4}, \u{1F1EE}\u{1F1F6}, \u{1F1EE}\u{1F1F7}, \u{1F1EE}\u{1F1F8}, \u{1F1EE}\u{1F1F9}, \u{1F1EF}\u{1F1EA}, \u{1F1EF}\u{1F1F2}, \u{1F1EF}\u{1F1F4}, \u{1F1EF}\u{1F1F5}, \u{1F1F0}\u{1F1EA}, \u{1F1F0}\u{1F1EC}, \u{1F1F0}\u{1F1ED}, \u{1F1F0}\u{1F1EE}, \u{1F1F0}\u{1F1F2}, \u{1F1F0}\u{1F1F3}, \u{1F1F0}\u{1F1F5}, \u{1F1F0}\u{1F1F7}, \u{1F1F0}\u{1F1FC}, \u{1F1F0}\u{1F1FE}, \u{1F1F0}\u{1F1FF}, \u{1F1F1}\u{1F1E6}, \u{1F1F1}\u{1F1E7}, \u{1F1F1}\u{1F1E8}, \u{1F1F1}\u{1F1EE}, \u{1F1F1}\u{1F1F0}, \u{1F1F1}\u{1F1F7}, \u{1F1F1}\u{1F1F8}, \u{1F1F1}\u{1F1F9}, \u{1F1F1}\u{1F1FA}, \u{1F1F1}\u{1F1FB}, \u{1F1F1}\u{1F1FE}, \u{1F1F2}\u{1F1E6}, \u{1F1F2}\u{1F1E8}, \u{1F1F2}\u{1F1E9}, \u{1F1F2}\u{1F1EA}, \u{1F1F2}\u{1F1EB}, \u{1F1F2}\u{1F1EC}, \u{1F1F2}\u{1F1ED}, \u{1F1F2}\u{1F1F0}, \u{1F1F2}\u{1F1F1}, \u{1F1F2}\u{1F1F2}, \u{1F1F2}\u{1F1F3}, \u{1F1F2}\u{1F1F4}, \u{1F1F2}\u{1F1F5}, \u{1F1F2}\u{1F1F6}, \u{1F1F2}\u{1F1F7}, \u{1F1F2}\u{1F1F8}, \u{1F1F2}\u{1F1F9}, \u{1F1F2}\u{1F1FA}, \u{1F1F2}\u{1F1FB}, \u{1F1F2}\u{1F1FC}, \u{1F1F2}\u{1F1FD}, \u{1F1F2}\u{1F1FE}, \u{1F1F2}\u{1F1FF}, \u{1F1F3}\u{1F1E6}, \u{1F1F3}\u{1F1E8}, \u{1F1F3}\u{1F1EA}, \u{1F1F3}\u{1F1EB}, \u{1F1F3}\u{1F1EC}, \u{1F1F3}\u{1F1EE}, \u{1F1F3}\u{1F1F1}, \u{1F1F3}\u{1F1F4}, \u{1F1F3}\u{1F1F5}, \u{1F1F3}\u{1F1F7}, \u{1F1F3}\u{1F1FA}, \u{1F1F3}\u{1F1FF}, \u{1F1F4}\u{1F1F2}, \u{1F1F5}\u{1F1E6}, \u{1F1F5}\u{1F1EA}, \u{1F1F5}\u{1F1EB}, \u{1F1F5}\u{1F1EC}, \u{1F1F5}\u{1F1ED}, \u{1F1F5}\u{1F1F0}, \u{1F1F5}\u{1F1F1}, \u{1F1F5}\u{1F1F2}, \u{1F1F5}\u{1F1F3}, \u{1F1F5}\u{1F1F7}, \u{1F1F5}\u{1F1F8}, \u{1F1F5}\u{1F1F9}, \u{1F1F5}\u{1F1FC}, \u{1F1F5}\u{1F1FE}, \u{1F1F6}\u{1F1E6}, \u{1F1F7}\u{1F1EA}, \u{1F1F7}\u{1F1F4}, \u{1F1F7}\u{1F1F8}, \u{1F1F7}\u{1F1FA}, \u{1F1F7}\u{1F1FC}, \u{1F1F8}\u{1F1E6}, \u{1F1F8}\u{1F1E7}, \u{1F1F8}\u{1F1E8}, \u{1F1F8}\u{1F1E9}, \u{1F1F8}\u{1F1EA}, \u{1F1F8}\u{1F1EC}, \u{1F1F8}\u{1F1ED}, \u{1F1F8}\u{1F1EE}, \u{1F1F8}\u{1F1EF}, \u{1F1F8}\u{1F1F0}, \u{1F1F8}\u{1F1F1}, \u{1F1F8}\u{1F1F2}, \u{1F1F8}\u{1F1F3}, \u{1F1F8}\u{1F1F4}, \u{1F1F8}\u{1F1F7}, \u{1F1F8}\u{1F1F8}, \u{1F1F8}\u{1F1F9}, \u{1F1F8}\u{1F1FB}, \u{1F1F8}\u{1F1FD}, \u{1F1F8}\u{1F1FE}, \u{1F1F8}\u{1F1FF}, \u{1F1F9}\u{1F1E8}, \u{1F1F9}\u{1F1E9}, \u{1F1F9}\u{1F1EB}, \u{1F1F9}\u{1F1EC}, \u{1F1F9}\u{1F1ED}, \u{1F1F9}\u{1F1EF}, \u{1F1F9}\u{1F1F0}, \u{1F1F9}\u{1F1F1}, \u{1F1F9}\u{1F1F2}, \u{1F1F9}\u{1F1F3}, \u{1F1F9}\u{1F1F4}, \u{1F1F9}\u{1F1F7}, \u{1F1F9}\u{1F1F9}, \u{1F1F9}\u{1F1FB}, \u{1F1F9}\u{1F1FC}, \u{1F1F9}\u{1F1FF}, \u{1F1FA}\u{1F1E6}, \u{1F1FA}\u{1F1EC}, \u{1F1FA}\u{1F1F2}, \u{1F1FA}\u{1F1F8}, \u{1F1FA}\u{1F1FE}, \u{1F1FA}\u{1F1FF}, \u{1F1FB}\u{1F1E6}, \u{1F1FB}\u{1F1E8}, \u{1F1FB}\u{1F1EA}, \u{1F1FB}\u{1F1EC}, \u{1F1FB}\u{1F1EE}, \u{1F1FB}\u{1F1F3}, \u{1F1FB}\u{1F1FA}, \u{1F1FC}\u{1F1EB}, \u{1F1FC}\u{1F1F8}, \u{1F1FE}\u{1F1EA}, \u{1F1FE}\u{1F1F9}, \u{1F1FF}\u{1F1E6}, \u{1F1FF}\u{1F1F2}, \u{1F1FF}\u{1F1FC}";
  console.log(text);
  console.groupEnd();
  // ! ********** Literals ********** /
  console.group('********** Literals');
  const olives = 0b0001;
  const ham = 0b0010;
  const pineapple = 0b0100;
  const artechoke = 0b1000;

  const pizza_ham_pineapple = pineapple | ham;
  const pizza_four_seasons = olives | ham | artechoke;
  console.log(pizza_ham_pineapple); //6
  console.log(pizza_four_seasons);  //11
  console.groupEnd();
  // ! ********** –¢–µ–≥–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã **********
  console.group('********** –¢–µ–≥–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã');
  function template(strings, ...keys) {
    return (function (...values) {
      var dict = values[values.length - 1] || {};
      var result = [strings[0]];
      keys.forEach(function (key, i) {
        var value = Number.isInteger(key) ? values[key] : dict[key];
        result.push(value, strings[i + 1]);
      });
      return result.join('');
    });
  }

  var t1Closure = template`${0}${1}${0}!`;
  console.log(t1Closure('Y', 'A'));  // "YAY!"
  var t2Closure = template`${0} ${'foo'}!`;
  console.log(t2Closure('Hello', { foo: 'World' }));  // "Hello World!"
  function latex(str) {
    return { "cooked": str[0], "raw": str.raw[0] }
  }

  console.log(latex`–ü–µ—Ä–≤—ã–π
   \unicode  yes`); // { cooked: undefined, raw: "\unicode" }
  console.groupEnd();

  function tag(strings) {
    return strings.raw[0];
  }

  console.log('********** –°—ã—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî ', tag`string text line 1 \\n string text line 2`);
  // –≤—ã–≤–æ–¥–∏—Ç "string text line 1 \\n string text line 2",
  // –≤–∫–ª—é—á–∞—è 'n' –∏ –¥–≤–∞ —Å–∏–º–≤–æ–ª–∞ '\'

}
